{"version":3,"sources":["components/feedback/feedbackOptions.component.js","components/feedback/FeedbackOptions.js","components/statistics/statistic.component.js","components/statistics/Statistics.js","components/section/Section.component.js","components/section/Section.js","components/notification/Notification.component.js","components/notification/Notification.js","GlobalStyles.component.js","components/App.js","index.js"],"names":["Buttons","styled","button","Container","div","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","item","key","type","name","onClick","List","ul","Statistics","good","neutral","bad","total","positivePercentage","Title","h2","Section","title","children","Result","Notification","message","GlobalStyled","createGlobalStyle","App","state","addFeedback","event","preventDefault","target","setState","countTotalFeedback","i","values","length","countPositiveFeedbackPercentage","percentage","Math","round","this","Component","ReactDOM","render","document","querySelector"],"mappings":"orBAEA,IAAMA,EAAUC,IAAOC,OAAV,KAabF,EAAQG,UAAYF,IAAOG,IAA3B,KAKeJ,QCCAK,EAfS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,kBAAC,EAAQJ,UAAT,KACGK,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACxB,kBAAC,EAAD,CAASC,IAAKD,EAAME,KAAK,SAASC,KAAMH,EAAMI,QAASR,GACpDI,Q,oWCTX,IAAMK,EAAOf,IAAOgB,GAAV,KASVD,EAAKb,UAAYF,IAAOG,IAAxB,KAQeY,QCSAE,EArBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,kBAAC,EAAKpB,UAAN,KACE,0CACA,kBAAC,EAAD,KACE,qCAAWgB,GACX,wCAAcC,GACd,oCAAUC,GACV,sCAAYC,GACZ,kDAAwBC,EAAxB,Q,6ICdR,IAOeC,EAPDvB,IAAOwB,GAAV,KCgBIC,EAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,iCACE,kBAAC,EAAD,KAAQD,GACPC,I,wJCTL,IAMeC,EANA5B,IAAOG,IAAV,KCOG0B,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,kBAAC,EAAD,KAASA,I,wcCC/C,IAuBeC,EAvBMC,YAAH,KCEGC,E,4MACnBC,MAAQ,CACNhB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPe,YAAc,SAACC,GACbA,EAAMC,iBACN9B,OAAOC,KAAK,EAAK0B,OAAOzB,KAAI,SAACC,GAC3B,GAAIA,IAAS0B,EAAME,OAAOzB,KACxB,OAAO,EAAK0B,SAAL,eACJH,EAAME,OAAOzB,KAAO,EAAKqB,MAAMxB,GAAQ,Q,EAMhD8B,mBAAqB,WAEnB,IADA,IAAInB,EAAQ,EACHoB,EAAI,EAAGA,EAAIlC,OAAOmC,OAAO,EAAKR,OAAOS,OAAQF,GAAK,EACzDpB,GAASd,OAAOmC,OAAO,EAAKR,OAAOO,GAErC,OAAOpB,G,EAGTuB,gCAAkC,WAEhC,IADA,IAAIvB,EAAQ,EACHoB,EAAI,EAAGA,EAAIlC,OAAOmC,OAAO,EAAKR,OAAOS,OAAQF,GAAK,EACzDpB,GAASd,OAAOmC,OAAO,EAAKR,OAAOO,GAErC,IAAMI,EAAc,EAAKX,MAAMhB,KAAOG,EAAS,IAC/C,OAAOyB,KAAKC,MAAMF,I,uDAGV,IAAD,EACwBG,KAAKd,MAA5BhB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACvB,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAASM,MAAM,0BACb,kBAAC,EAAD,CACErB,QAAS2C,KAAKd,MACd5B,gBAAiB0C,KAAKb,eAGzBa,KAAKR,qBACJ,kBAAC,EAAD,CACEtB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO2B,KAAKR,qBACZlB,mBAAoB0B,KAAKJ,oCAG3B,kBAAC,EAAD,CAAcd,QAAQ,2B,GAtDCmB,aCAjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.48c358de.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Buttons = styled.button`\r\n  border-radius: 20px;\r\n  border-color: black;\r\n  background-color: #f1f781;\r\n  width: 100px;\r\n  height: 30px;\r\n  text-transform: uppercase;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n  &:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\nButtons.Container = styled.div`\r\n  margin: auto;\r\n  text-align: center;\r\n`;\r\n\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Buttons from './feedbackOptions.component'\r\n\r\n\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <Buttons.Container>\r\n      {Object.keys(options).map((item) => (\r\n        <Buttons key={item} type=\"button\" name={item} onClick={onLeaveFeedback}>\r\n          {item}\r\n        </Buttons>\r\n      ))}\r\n    </Buttons.Container>\r\n  );\r\n};\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import styled from 'styled-components';\r\n\r\nconst List = styled.ul`\r\ntext-align: center;\r\nwidth: 300px;\r\nmargin: 0 auto;\r\nlist-style:none;\r\n& li:not(:last-child) {\r\nmargin-bottom: 20px;\r\n}\r\n`;\r\nList.Container = styled.div`\r\ntext-align: center;\r\n& h2 {\r\n    margin: 30px 0;\r\n    font-size: 40px;\r\n    color: gray;\r\n}\r\n`;\r\nexport default List;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from 'styled-components';\r\nimport List from './statistic.component'\r\n\r\n\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <List.Container>\r\n      <h2>Statistics</h2>\r\n      <List>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad: {bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>Positive feedback: {positivePercentage}%</li>\r\n      </List>\r\n    </List.Container>\r\n  );\r\n};\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import styled from 'styled-components';\r\n\r\nconst Title = styled.h2 `\r\ntext-align: center;\r\nmargin: 30px 0;\r\nfont-size: 40px;\r\ncolor: gray;\r\n`\r\n\r\nexport default Title;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from 'styled-components';\r\nimport Title from './Section.component';\r\n\r\n\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <Title>{title}</Title>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\nconst Result = styled.div`\r\n  margin: 20px auto;\r\n  text-align: center;\r\n  font-size: 22px;\r\n  color: gray;\r\n`;\r\nexport default Result;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Result from \"./Notification.component\";\r\nconst Notification = ({ message }) => <Result>{message}</Result>;\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\n\r\n\r\nconst GlobalStyled = createGlobalStyle`\r\nhtml {\r\n  box-sizing: border-box;\r\n}\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\nbody {\r\n  margin: 0;\r\n  font-family: Arial, sans-serif;\r\n  padding-bottom: 20px;\r\n  background: rgb(117,115,144);\r\n  background: linear-gradient(90deg, rgba(117,115,144,1) 0%, rgba(211,240,6,1) 42%, rgba(255,0,0,1) 100%);\r\n}\r\nli {\r\n    list-style-type: none;\r\n}\r\n`;\r\n\r\nexport default GlobalStyled;","import React, { Component } from \"react\";\r\nimport FeedbackOptions from \"../components/feedback/FeedbackOptions\";\r\nimport Statistics from \"../components/statistics/Statistics\";\r\nimport Section from \"../components/section/Section\";\r\nimport Notification from \"../components/notification/Notification\";\r\nimport GlobalStyled from \"../GlobalStyles.component\";\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n  addFeedback = (event) => {\r\n    event.preventDefault();\r\n    Object.keys(this.state).map((item) => {\r\n      if (item === event.target.name) {\r\n        return this.setState({\r\n          [event.target.name]: this.state[item] + 1,\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    let total = 0;\r\n    for (let i = 0; i < Object.values(this.state).length; i += 1) {\r\n      total += Object.values(this.state)[i];\r\n    }\r\n    return total;\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    let total = 0;\r\n    for (let i = 0; i < Object.values(this.state).length; i += 1) {\r\n      total += Object.values(this.state)[i];\r\n    }\r\n    const percentage = (this.state.good / total) * 100;\r\n    return Math.round(percentage);\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <>\r\n        <GlobalStyled />\r\n        <Section title=\"Please, leave feedback\">\r\n          <FeedbackOptions\r\n            options={this.state}\r\n            onLeaveFeedback={this.addFeedback}\r\n          />\r\n        </Section>\r\n        {this.countTotalFeedback() ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={this.countTotalFeedback()}\r\n            positivePercentage={this.countPositiveFeedbackPercentage()}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}